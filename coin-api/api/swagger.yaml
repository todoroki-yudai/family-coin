---
swagger: "2.0"
info:
  description: "Family Point API"
  version: "1.0"
  title: "Family Point API"
host: "family-point.peace-coin.org"
basePath: "/api/v1.0"
schemes:
- "http"
- "https"
consumes:
- "application/x-www-form-urlencoded"
- "application/json"
produces:
- "application/json"
paths:
  /users/entry:
    post:
      tags:
      - "Users"
      description: "user entry"
      operationId: "post__users_entry"
      parameters:
      - name: "username"
        in: "formData"
        description: "designate mail_address."
        required: true
        type: "string"
      - name: "password"
        in: "formData"
        description: "plain password user entered."
        required: false
        type: "string"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/AuthInfo"
        default:
          description: "Internal Server Error."
      x-swagger-router-controller: "Users"
  /users/balances:
    get:
      tags:
      - "Users"
      summary: ""
      description: ""
      operationId: "get__users_balances"
      parameters:
      - name: "token"
        in: "header"
        description: "Use this access token to access the API server"
        required: true
        type: "string"
      - name: "start_date"
        in: "query"
        required: true
        type: "string"
        format: "date"
      - name: "end_date"
        in: "query"
        required: true
        type: "string"
        format: "date"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/UserBalance"
      x-swagger-router-controller: "Users"
  /users/balances/latest:
    get:
      tags:
      - "Users"
      summary: ""
      description: ""
      operationId: "get__users_balances_latest"
      parameters:
      - name: "token"
        in: "header"
        description: "Use this access token to access the API server"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/UserBalance"
      x-swagger-router-controller: "Users"
  /users/login:
    post:
      tags:
      - "Users"
      description: "user login"
      operationId: "post__users_login"
      parameters:
      - name: "username"
        in: "formData"
        description: "user name."
        required: false
        type: "string"
      - name: "password"
        in: "formData"
        description: "plain password user entered."
        required: false
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/AuthInfo"
        default:
          description: "Internal Server Error."
      x-swagger-router-controller: "Users"
  /users/me:
    get:
      tags:
      - "Users"
      summary: ""
      description: ""
      operationId: "get__users_me"
      parameters:
      - name: "token"
        in: "header"
        description: "Use this access token to access the API server"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/User"
      x-swagger-router-controller: "Users"
  /users/me/logout:
    post:
      tags:
      - "Users"
      summary: ""
      description: ""
      operationId: "post__users_me_logout"
      parameters:
      - name: "token"
        in: "header"
        description: "Use this access token to access the API server"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResultMessage"
      x-swagger-router-controller: "Users"
  /users/me/points/{type}/:
    get:
      tags:
      - "Users"
      summary: ""
      description: ""
      operationId: "get__users_me_points"
      parameters:
      - name: "token"
        in: "header"
        description: "Use this access token to access the API server"
        required: true
        type: "string"
      - name: "type"
        in: "path"
        required: true
        type: "string"
        default: "thanks"
        enum:
        - "thanks"
        - "message"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/UserPoints"
      x-swagger-router-controller: "Users"
  /users/me/transactions:
    get:
      tags:
      - "Users"
      summary: "v0.1+ | Get transaction's record for each user"
      operationId: "get__users_me_transactions"
      parameters:
      - name: "token"
        in: "header"
        description: "Use this access token to access the API server"
        required: true
        type: "string"
      - name: "start_date"
        in: "query"
        required: false
        type: "string"
        format: "date"
      - name: "end_date"
        in: "query"
        required: false
        type: "string"
        format: "date"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Transaction"
      x-swagger-router-controller: "Users"
  /users/me/balances:
    get:
      tags:
      - "Users"
      summary: "v0.1+ | Get user's balances record for each user"
      operationId: "get__users_me_balances"
      parameters:
      - name: "token"
        in: "header"
        description: "Use this access token to access the API server"
        required: true
        type: "string"
      - name: "start_date"
        in: "query"
        required: false
        type: "string"
        format: "date"
      - name: "end_date"
        in: "query"
        required: false
        type: "string"
        format: "date"
      responses:
        200:
          description: "Successful response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/UserBalance"
      x-swagger-router-controller: "Users"
  /thanks/send:
    post:
      tags:
      - "Thanks"
      summary: "v0.1+ | send coins to someone"
      description: "send coins to someone"
      operationId: "post__thanks_send"
      parameters:
      - name: "token"
        in: "header"
        description: "Use this access token to access the API server"
        required: true
        type: "string"
      - name: "receiver_address"
        in: "formData"
        required: true
        type: "string"
      - name: "amount"
        in: "formData"
        required: true
        type: "number"
        format: "float"
      - name: "message"
        in: "formData"
        required: true
        type: "string"
      - name: "usemosaic"
        in: "formData"
        required: true
        type: "string"
        default: "false"
        enum:
          - "true"
          - "false"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResultMessage"
      x-swagger-router-controller: "Thanks"
  /thanks/transactions:
    get:
      tags:
      - "Thanks"
      summary: "v0.1+ | find transactions"
      description: "find transactions"
      operationId: "get__thanks_transactions"
      parameters:
      - name: "token"
        in: "header"
        description: "Use this access token to access the API server"
        required: true
        type: "string"
      - name: "start_date"
        in: "query"
        required: true
        type: "string"
        format: "date"
      - name: "end_date"
        in: "query"
        required: true
        type: "string"
        format: "date"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Transaction"
      x-swagger-router-controller: "Thanks"
  /thanks/term:
    get:
      tags:
      - "Thanks"
      summary: "v0.1+ | get thanks point term"
      description: "get thanks point term"
      operationId: "get__thanks_term"
      parameters:
      - name: "token"
        in: "header"
        description: "Use this access token to access the API server"
        required: true
        type: "string"
      - name: "type"
        in: "query"
        type: "string"
        enum:
        - "specify"
        - "latest"
      - name: "target_date"
        in: "query"
        type: "string"
        format: "date"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ThanksTerm"
      x-swagger-router-controller: "Thanks"
    post:
      tags:
      - "Thanks"
      summary: "v0.1+ | save target term"
      description: "save target term"
      operationId: "post__thanks_term"
      parameters:
      - name: "token"
        in: "header"
        description: "Use this access token to access the API server"
        required: true
        type: "string"
      - name: "id"
        in: "formData"
        required: false
        type: "string"
      - name: "start_date"
        in: "formData"
        required: false
        type: "string"
        format: "date"
      - name: "end_date"
        in: "formData"
        required: false
        type: "string"
        format: "date"
      - name: "is_sent"
        in: "formData"
        required: false
        type: "boolean"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResultMessage"
      x-swagger-router-controller: "Thanks"
definitions:
  ResultMessage:
    required:
    - "result"
    properties:
      result:
        type: "string"
        example: "OK"
        enum:
        - "OK"
        - "NG"
      message:
        type: "string"
        example: ""
        description: "error code"
  AuthInfo:
    required:
      - token
      - expires_in
    properties:
      token:
        type: string
        description: token
      expires_in:
        type: integer
        description: The expiration time for access_token in second.
  Error:
    required:
    - "domain"
    - "error_subcode"
    - "error_user_msg"
    - "error_user_title"
    - "message"
    - "reason"
    properties:
      message:
        type: "string"
        example: "The user not found."
        description: "Message describing the error in English."
      domain:
        type: "string"
        example: "user_accounts_service"
        description: "Application service domain."
        enum:
        - "c0ban_crowd_mining_portal_service"
      reason:
        type: "string"
        example: "NotFound"
        description: "Main error code. Upper camel case.\n"
      error_subcode:
        type: "integer"
        format: "int32"
        example: 11
        description: "Local error code in the main error."
      error_user_title:
        type: "string"
        example: "ユーザが見つかりませんでした。"
        description: "Translated title of this error. User readable."
      error_user_msg:
        type: "string"
        example: "ユーザIDが正しいかどうかお確かめください。"
        description: "Translated message describing some action of this error. User\
          \ readable."
  Transaction:
    type: "object"
    properties:
      sender_address:
        type: "string"
      receiver_address:
        type: "string"
      amount:
        type: "integer"
      message:
        type: "string"
      created_at:
        type: "string"
        format: "date-time"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
      username:
        type: "string"
      address:
        type: "string"
      avatar:
        type: "string"
      balance:
        type: "integer"
      nem_balance:
        type: "integer"
      increase_coin:
        type: "integer"
      roles:
        type: array
        description: roles
        items:
          type: string
      introduction:
        type: string
        description: introduction
  UserBalance:
    type: "object"
    properties:
      id:
        type: "integer"
      address:
        type: "string"
      balance:
        type: "integer"
      created_at:
        type: "string"
        format: "date-time"
  UserPoints:
    type: "object"
    required:
    - "my_point"
    - "type"
    properties:
      type:
        type: "string"
        enum:
        - "THANKS"
        - "MESSAGE"
      my_point:
        type: "integer"
        format: "int64"
        description: "specific point"
  ThanksTerm:
    type: "object"
    required:
    - "start_date"
    - "end_date"
    properties:
      start_date:
        type: "string"
        format: "date"
      end_date:
        type: "string"
        format: "date"
      is_sent:
        type: "boolean"
parameters:
  accessToken:
    name: "token"
    in: "header"
    description: "Use this access token to access the API server"
    required: true
    type: "string"
responses:
  400WithDocument:
    description: "* BadRequest\n* Invalid\n* Required\n"
    schema:
      $ref: "#/definitions/Error"
  401WithDocument:
    description: "* Required\n* AuthError\n* Expired\n"
    schema:
      $ref: "#/definitions/Error"
  403WithDocument:
    description: "* Forbidden\n"
    schema:
      $ref: "#/definitions/Error"
  404WithDocument:
    description: "* NotFound\n"
    schema:
      $ref: "#/definitions/Error"
  409WithDocument:
    description: "* Conflict\n"
    schema:
      $ref: "#/definitions/Error"
  413WithDocument:
    description: "* UploadTooLarge\n"
    schema:
      $ref: "#/definitions/Error"
  415WithDocument:
    description: "* UnsupportedMediaType\n"
    schema:
      $ref: "#/definitions/Error"
  500WithDocument:
    description: "* InternalError\n"
    schema:
      $ref: "#/definitions/Error"
  503WithDocument:
    description: "* NotReady\n"
    schema:
      $ref: "#/definitions/Error"
